############################################################
{% if iptables_lan_interface is defined %}
# LAN: {{ iptables_lan_interface }} - {{ iptables_lan_ip }}
{% endif %}
{% if iptables_wan_interface is defined %}
# WAN: {{ iptables_wan_interface }} - {{ iptables_wan_ip }}
{% endif %}
#
# generated by Ansible
#
############################################################
*mangle
:PREROUTING ACCEPT  [0:0]
:INPUT ACCEPT       [0:0]
:FORWARD ACCEPT     [0:0]
:OUTPUT ACCEPT      [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
############################################################
*filter
:INPUT DROP         [0:0]
:FORWARD DROP       [0:0]
:OUTPUT DROP        [0:0]
:bad_packets      - [0:0]
{% for map in iptables_geoip_maps %}
:geoip_{{ map.name | lower }}      - [0:0]
{% endfor %}
############################################################
-A INPUT -i lo -j ACCEPT
-A INPUT -j bad_packets
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Open Ports (ansible)
{% for port in iptables_open_ports %}
{%- if port.geoip_map is defined -%}
-A INPUT {% if port.source is defined and port.source is not none %}-s {{ port.source }}{% endif %} -p {{ port.protocol }} -m {{ port.protocol }} --dport {{ port.port }} -j geoip_{{ port.geoip_map | lower }}
{% endif %}
-A INPUT {% if port.source is defined and port.source is not none %}-s {{ port.source }}{% endif %} -p {{ port.protocol }} -m {{ port.protocol }} --dport {{ port.port }} -j ACCEPT
{% endfor %}


############################################################
-A INPUT -p icmp -f -j LOG --log-prefix "ICMP Fragment: "
-A INPUT -p icmp -f -j DROP
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT
-A INPUT -p icmp -j DROP
-A INPUT -m limit --limit 3/min --limit-burst 3 -j LOG --log-prefix "INPUT packet died: "
############################################################
-A FORWARD -j bad_packets
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT                    

# Port Forwarding (ansible)
# like -A FORWARD -i eth0 -o eth1 -d 10.0.0.2/32 -p tcp -m tcp --dport 8443 -j ACCEPT
{% for frw in iptables_port_forwarding %}
-A FORWARD -i {% if frw.src_interface is defined %}{{ frw.src_interface }}{% else %}{{ iptables_wan_interface }}{% endif %} -o {% if frw.dest_interface is defined %}{{ frw.dest_interface }}{% else %}{{ iptables_lan_interface }}{% endif %} -d {{ frw.dest_ip }}/32 -p {{ frw.protocol }} -m {{ frw.protocol }} --dport {{ frw.dest_port }} -j ACCEPT
{% endfor %}

-A FORWARD -m limit --limit 3/min --limit-burst 3 -j LOG --log-prefix "FORWARD packet died: "
############################################################
-A OUTPUT -j bad_packets

{% for interface in ansible_interfaces %}
-A OUTPUT -o {{ interface }} -j ACCEPT
{% endfor %}

-A OUTPUT -m limit --limit 3/min --limit-burst 3 -j LOG --log-prefix "OUTPUT packet died: "
############################################################

{% for map in iptables_geoip_maps %}

# GeoIP Map {{ map.name }}

-A geoip_{{ map.name | lower }} -m set --match-set universal_allow src -j RETURN

{% if map.type == "allow" %}
{% for country in map.countries %}
-A geoip_{{ map.name | lower }} -m set --match-set country_{{ country | lower }} src -j RETURN
{% endfor %}
-A geoip_{{ map.name | lower }} -j DROP
{% else %}
{% for country in map.countries %}
-A geoip_{{ map.name | lower }} -m set --match-set country_{{ country | lower }} src -j DROP
{% endfor %}
-A geoip_{{ map.name | lower }} -j RETURN
{% endif %}

{% endfor %}

############################################################
-A bad_packets -d 224.0.0.1/32 -j DROP
-A bad_packets -m pkttype --pkt-type broadcast -j DROP
-A bad_packets -m state --state INVALID -j LOG --log-prefix "Invalid packet: "
-A bad_packets -m state --state INVALID -j DROP
-A bad_packets -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j LOG --log-prefix "New not syn: "
-A bad_packets -p tcp -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,PSH,ACK,URG -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,PSH,URG -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,PSH,URG -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,ACK,URG -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG FIN,SYN,RST,ACK,URG -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags SYN,RST SYN,RST -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags SYN,RST SYN,RST -j DROP
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN FIN,SYN -j LOG --log-prefix "Stealth scan: "
-A bad_packets -p tcp -m tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
-A bad_packets -p tcp -j RETURN
############################################################
COMMIT

*nat
:PREROUTING ACCEPT  [0:0]
:INPUT ACCEPT       [0:0]
:OUTPUT ACCEPT      [0:0]
:POSTROUTING ACCEPT [0:0]
############################################################
-A PREROUTING -m limit --limit 3/min --limit-burst 3 -j LOG --log-prefix "PREROUTING: "

# Port Forwarding (ansible)
# like -A PREROUTING -d 123.4.56.78/32 -i eth0 -p tcp -m tcp --dport 8443 -j DNAT --to-destination 10.0.0.2:8443
{% for frw in iptables_port_forwarding %}
-A PREROUTING -d {% if frw.src_ip is defined %}{{ frw.src_ip }}/32{% else %}{{ iptables_wan_ip }}/32{% endif %} -i {% if frw.src_interface is defined %}{{ frw.src_interface }}{% else %}{{ iptables_wan_interface }}{% endif %} -p {{ frw.protocol }} -m {{ frw.protocol }} --dport {{ frw.src_port }} -j DNAT --to-destination {{ frw.dest_ip }}:{{ frw.dest_port }}
{% endfor %}

############################################################
-A POSTROUTING -m limit --limit 3/min --limit-burst 3 -j LOG --log-prefix "POSTROUTING: "

# Outward natting
{% for itemset in iptables_snat_interfaces %}
-A POSTROUTING -o {{ itemset.interface }} -j SNAT --to-source {{ itemset.ip }}
{% endfor %}
COMMIT
